[build-system]
requires = [
    "scikit-build-core>=0.11.0",
    "jax >= 0.4.31; python_version > '3.9' and (sys_platform == 'win32' or sys_platform == 'linux')"
]
build-backend = "scikit_build_core.build"

[project]
name = "ale-py"
description = "The Arcade Learning Environment (ALE) - a platform for AI research."
readme = "README.md"
requires-python = ">=3.9"
license = "GPL-2.0-only"
license-files = ["LICENSE.md"]
keywords = ["reinforcement-learning", "arcade-learning-environment", "atari"]
authors = [
    {name = "Marc G. Bellemare"},
    {name = "Yavar Naddaf"},
    {name = "Joel Veness"},
    {name = "Michael Bowling"},
]
maintainers = [
    {name = "Farama Foundation", email = "contact@farama.org"},
    {name = "Jesse Farebrother", email = "jfarebro@cs.mcgill.ca"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>1.20",
    "importlib-metadata>=4.10.0; python_version < '3.10'",
    "typing-extensions; python_version < '3.11'"
]
dynamic = ["version"]

[project.optional-dependencies]
vector = [
    "gymnasium>=1.1.0",
    "opencv-python>=3.0"
]
xla = [
    "gymnasium>=1.1.0",
    "opencv-python>=3.0",
    "jax >= 0.4.31; python_version > '3.9' and (sys_platform == 'win32' or sys_platform == 'linux')"
]
test = [
    "pytest>=7.0",
    "gymnasium>=1.1.0",
    "opencv-python>=3.0",
    "jax >= 0.4.31; python_version > '3.9' and (sys_platform == 'win32' or sys_platform == 'linux')",
    "chex; python_version > '3.9' and (sys_platform == 'win32' or sys_platform == 'linux')"
]

[project.urls]
homepage = "https://github.com/Farama-Foundation/Arcade-Learning-Environment"
documentation = "https://ale.farama.org"
changelog = "https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/CHANGELOG.md"

[tool.scikit-build]
# Build directory
build-dir = "build/{wheel_tag}"
# Minimum CMake version
cmake.minimum-version = "3.22"
# CMake build type
cmake.build-type = "Release"
# Verbose output for debugging
cmake.verbose = false
# Install components
install.components = ["python"]
# Wheel configuration
wheel.expand-macos-universal-tags = true
# Source directory layout
experimental = true

[tool.scikit-build.cmake.define]
# Core build options
BUILD_CPP_LIB = "OFF"
BUILD_PYTHON_LIB = "ON"
BUILD_VECTOR_LIB = "ON"
SDL_SUPPORT = "ON"
SDL_DYNLOAD = "ON"
# Python executable
Python3_EXECUTABLE = { env = "PYTHON_EXECUTABLE", default = "" }

#[tool.scikit-build.cmake.define.BUILD_VECTOR_XLA_LIB]
## Only enable XLA on supported platforms
#when = "python_version>='3.10' and (sys_platform=='win32' or sys_platform=='linux')"
#value = "ON"
#default = "OFF"

[tool.setuptools]
packages = [
    "ale_py",
    "ale_py.roms",
]
package-dir = {ale_py = "src/ale/python"}
package-data = {"ale_py" = ["py.typed", "*.pyi", "**/*.pyi"], "ale_py.roms" = ["md5.json", "*.bin"]}

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --ignore vcpkg --ignore build"
testpaths = ["tests"]
norecursedirs = ["vcpkg", "build"]

[tool.cibuildwheel]
# Skip 32-bit wheels, PyPy & musllinux
skip = ["*-win32", "*i686", "pp*", "*-musllinux*"]

build-frontend = "build"
manylinux-x86_64-image = "manylinux-x86_64-vcpkg:latest"
manylinux-aarch64-image = "manylinux-aarch64-vcpkg:latest"

[tool.cibuildwheel.linux]
environment-pass = ["GITHUB_REF"]

# macOS x86-64
[[tool.cibuildwheel.overrides]]
select = "*-macosx_x86_64"
environment = { PIP_ONLY_BINARY = "numpy", VCPKG_DEFAULT_TRIPLET = "x64-osx-mixed", VCPKG_FEATURE_FLAGS = "-compilertracking", MACOSX_DEPLOYMENT_TARGET = "13.0" }

# macOS arm64
[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
environment = { PIP_ONLY_BINARY = "numpy", VCPKG_DEFAULT_TRIPLET = "arm64-osx-mixed", VCPKG_FEATURE_FLAGS = "-compilertracking", MACOSX_DEPLOYMENT_TARGET = "13.0" }

# Windows x64
[[tool.cibuildwheel.overrides]]
select = "*-win_amd64"
environment = { PIP_ONLY_BINARY = "numpy", VCPKG_DEFAULT_TRIPLET = "x64-windows", VCPKG_FEATURE_FLAGS = "-compilertracking" }

# Linux x86-64 (manylinux)
[[tool.cibuildwheel.overrides]]
select = "*-manylinux_x86_64"
environment = { PIP_ONLY_BINARY = "numpy", VCPKG_DEFAULT_TRIPLET = "x64-linux-mixed", VCPKG_FEATURE_FLAGS = "-compilertracking" }

# Linux ARM64 (manylinux)
[[tool.cibuildwheel.overrides]]
select = "*-manylinux_aarch64"
environment = { PIP_ONLY_BINARY = "numpy", VCPKG_DEFAULT_TRIPLET = "arm64-linux-mixed", VCPKG_FEATURE_FLAGS = "-compilertracking" }
