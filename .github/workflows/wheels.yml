name: Wheels

on:
  push:
    tags-ignore:
      - "*.*"
    paths-ignore:
      - "docs/**"
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    name: ${{ matrix.runs-on }} â€¢ ${{ matrix.arch }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            arch: x86_64
          - runs-on: windows-latest
            arch: AMD64
          - runs-on: macos-12
            arch: x86_64
          - runs-on: macos-12
            arch: arm64
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Docker
      if: runner.os == 'Linux'
      run: docker login ghcr.io
      env:
        GITHUB_CR_TOKEN: ${{ secrets.CR_TOKEN }}

    - name: Setup msbuild
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    # TODO(jfarebro): 02/16/2023 - There's a bug where pkg-config isn't installed on the macOS
    # runner. See: https://github.com/actions/runner-images/pull/7125
    - name: Install pkg-config on macOS
      if: runner.os == 'macOS'
      run: brew install pkg-config

    - name: Setup vcpkg
      if: runner.os == 'macOS'  || runner.os == 'Windows'
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: "8150939b69720adc475461978e07c2d2bf5fb76e"
        # There's a permissions issue with the cache
        # https://github.com/microsoft/vcpkg/issues/20121
        doNotCache: true

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.0
      env:
        CIBW_ARCHS: "${{ matrix.arch }}"

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./wheelhouse/*.whl


  pypi:
    name: Deploy wheels to PyPi test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: wheels

      - name: Append PyPi test SHA
        run: |
          find wheels -type f -exec sh -c \
            "mv {} \$(echo {} | awk -F\"-\" '{OFS = FS; \$2 = \$2\"+${GITHUB_SHA::7}\"; print}')" \;

      - name: Publish to PyPi test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: wheels/
          print_hash: true


#  release:
#    name: Stage wheels to Github releases
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/download-artifact@v1
#        with:
#          name: wheels
#
#      - name: Create wheel archive
#        run: |
#          zip --junk-paths wheels wheels/*
#
#      - name: Create release
#        id: create_release
#        uses: actions/create-release@v1.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: true
#          prerelease: ${{ contains(github.ref, '-') }}
#
#      - name: Upload artifacts to release
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./wheels.zip
#          asset_name: wheels.zip
#          asset_content_type: application/zip
