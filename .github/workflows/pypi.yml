# workflow on publish
# 1. build the wheels for relevant systems
# 2. download artifacts and upload to PyPI

name: Push wheels to pypi

on:
  release:
    types: [ published ]

jobs:
  build-wheels:
    name: "${{ matrix.runs-on }} â€¢ ${{ matrix.arch }}"
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            arch: x86_64
          - runs-on: ubuntu-24.04-arm
            arch: aarch64
          - runs-on: windows-latest
            arch: AMD64
          - runs-on: macos-13
            arch: x86_64
          - runs-on: macos-13
            arch: arm64
    runs-on: ${{ matrix.runs-on }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      if: runner.os == 'linux'
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - name: Build Docker image with vcpkg
      if: runner.os == 'linux'
      # using build-push-action (without push) to make use of cache arguments
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ".github/docker/manylinux-${{ matrix.arch }}-vcpkg.Dockerfile"
        tags: "manylinux-${{ matrix.arch }}-vcpkg:latest"
        push: false
        load: true

    - name: Download and unpack ROMs
      run: ./scripts/download_unpack_roms.sh

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.21
      env:
        CIBW_ARCHS: "${{ matrix.arch }}"

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.runs-on }}-${{ matrix.arch }}
        path: ./wheelhouse/*.whl

  push-pypi:
    name: Deploy wheels to PyPi
    runs-on: ubuntu-latest
    needs: build-wheels
    permissions:
      id-token: write

    steps:
      # create the `ale_py-*.*.*.tar.gz` for source building
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: pip install setuptools
      - run: python setup.py sdist

      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows-latest-AMD64
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest-x86_64
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-24.04-arm-aarch64
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-13-x86_64
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-13-arm64
          path: dist

      - run: ls dist/

      - name: Publish to PyPi test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages-dir: dist/
          print-hash: true
