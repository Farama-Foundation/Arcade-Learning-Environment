name: Build ALE Python

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ALE Python on ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        config: [
          {"os": "ubuntu-latest", "deps": ["zlib", "sdl2"], "triplet": "x64-linux-mixed"},
          {"os": "windows-latest", "deps": ["zlib", "sdl2"], "triplet": "x64-windows"},
          {"os": "macos-latest", "deps": ["zlib", "sdl2"], "triplet": "x64-osx-mixed"}
        ]
    runs-on: ${{ matrix.config.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Docker Login
      if: matrix.config.os == 'ubuntu-latest'
      run: docker login ghcr.io --username "${GITHUB_ACTOR}" --password "${GITHUB_CR_TOKEN}"
      env:
        GITHUB_CR_TOKEN: ${{ secrets.CR_TOKEN }}

    - name: Tag release
      run: echo "ALE_BUILD_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.0.0
      env:
        CIBW_MANYLINUX_X86_64_IMAGE: "ghcr.io/jessefarebro/manylinux2014-vcpkg"
        CIBW_SKIP: "*i686* *win32* pp*"
        CIBW_ARCHS_MACOS: "x86_64"
        CIBW_TEST_REQUIRES: "pytest gym"
        CIBW_TEST_COMMAND: "pytest {project}"
        CIBW_ENVIRONMENT: "ALE_BUILD_VERSION=${{ env.ALE_BUILD_VERSION }} MACOSX_DEPLOYMENT_TARGET='10.15' VCPKG_DEFAULT_TRIPLET=${{ matrix.config.triplet }}"
        CIBW_BEFORE_ALL: "vcpkg install ${{ join(matrix.config.deps, ' ') }} --triplet ${{ matrix.config.triplet }} --overlay-triplets cmake/custom-triplets --feature-flags=-compilertracking"

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./wheelhouse/*.whl


  pypi:
    name: Deploy ALE Python to PyPi test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: wheels

      - name: Append PyPi test SHA
        run: |
          find wheels -type f -exec sh -c \
            "mv {} \$(echo {} | awk -F\"-\" '{OFS = FS; \$2 = \$2\"+${GITHUB_SHA::7}\"; print}')" \;

      - name: Publish to PyPi test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: wheels/


  release:
    name: Stage ALE Python to Github releases
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: wheels

      - name: Create wheel archive
        run: |
          zip --junk-paths ale-py wheels/*

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: ${{ contains(github.ref, '-') }}

      - name: Upload artifacts to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ale-py.zip
          asset_name: ale-py.zip
          asset_content_type: application/zip
